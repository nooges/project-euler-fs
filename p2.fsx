#!/usr/bin/env -S dotnet fsi

(*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)

let fibLimit (maxValue: int) =
    let rec loop (terms: list<int>) f1 f2 =
        match f2 with
        | f2 when f2 > maxValue -> terms
        | _ -> loop ((f1 + f2) :: terms) f2 (f1 + f2)

    loop [] 1 1

fibLimit 4000000
|> List.filter (fun n -> n % 2 = 0)
|> List.sum
|> printfn "%A"
